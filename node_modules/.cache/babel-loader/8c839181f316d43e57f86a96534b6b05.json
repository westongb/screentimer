{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wbell.HELIOTRAINING\\\\Desktop\\\\Project\\\\screentimer\\\\src\\\\Components\\\\countdownTimer.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport MenuBar from \"./menuBar\";\nimport \"./components.css\";\nexport default function CountDownTimer() {\n  useEffect(() => {\n    getTasks({});\n  }, []);\n  const [time, setTime] = useState(0);\n  const [tasks, setTasks] = useState();\n  const completedTasks = [];\n  const [displayTime, setDisplayTime] = useState(0);\n  const earnedTime = [];\n\n  function getTasks(res) {\n    fetch(\"http://localhost:5000/tasks/get\", {\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      setTasks(res);\n      return console.log(res);\n    } // (error) => {\n    //     setClasses(\"error\")\n    // }\n    );\n  }\n\n  let createButtons;\n  let taskList;\n  let taskName;\n  let assignedFamilyMember;\n  let taskRequired;\n  let taskMaxTime;\n  let taskTime;\n\n  function clickedButton(name) {\n    earnedTime.push(15);\n    completedTasks.push(name);\n    console.log(earnedTime);\n    console.log(completedTasks);\n  }\n\n  if (tasks != null) {\n    createButtons = tasks.map((item, i) => {\n      taskName = item.Name;\n      assignedFamilyMember = item.Family_Member;\n      taskRequired = item.Required;\n      taskMaxTime = item.Max_Time;\n      taskTime = item.Time;\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => clickedButton(taskName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }\n      }, taskName);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer__controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, createButtons, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"customForm\",\n    id: \"custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"minutes\",\n    placeholder: \"Enter Minutes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"display__time-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"display__end-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"script\", {\n    src: \"FINISHED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/wbell.HELIOTRAINING/Desktop/Project/screentimer/src/Components/countdownTimer.js"],"names":["React","useState","useContext","useEffect","BrowserRouter","Router","Route","Link","MenuBar","CountDownTimer","getTasks","time","setTime","tasks","setTasks","completedTasks","displayTime","setDisplayTime","earnedTime","res","fetch","method","then","json","console","log","createButtons","taskList","taskName","assignedFamilyMember","taskRequired","taskMaxTime","taskTime","clickedButton","name","push","map","item","i","Name","Family_Member","Required","Max_Time","Time"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport MenuBar from \"./menuBar\";\r\nimport \"./components.css\";\r\n \r\n\r\n\r\n\r\nexport default function CountDownTimer(){\r\n\r\n    useEffect(() => {\r\n        getTasks({})\r\n    },[]);\r\n\r\n\r\nconst [time, setTime] = useState(0)\r\nconst [tasks, setTasks] =useState()\r\nconst completedTasks = []\r\nconst [displayTime, setDisplayTime] = useState(0)\r\nconst earnedTime = []\r\n\r\n\r\nfunction getTasks(res){\r\n    fetch(\"http://localhost:5000/tasks/get\", {\r\n        method: \"GET\"\r\n    })\r\n    .then((res)=> { return res.json();\r\n    })\r\n    .then((res) =>{\r\n        setTasks(res)\r\n        return console.log(res)\r\n    },\r\n    // (error) => {\r\n    //     setClasses(\"error\")\r\n    // }\r\n    )\r\n}\r\n\r\nlet createButtons;\r\nlet taskList;\r\nlet taskName;\r\nlet assignedFamilyMember;\r\nlet taskRequired;\r\nlet taskMaxTime;\r\nlet taskTime;\r\n\r\nfunction clickedButton (name){\r\n    earnedTime.push(15)\r\n    completedTasks.push(name)\r\n    console.log(earnedTime)\r\n    console.log(completedTasks)\r\n}\r\n\r\n\r\nif(tasks != null){\r\n createButtons = tasks.map((item, i) => {\r\n    taskName = item.Name;\r\n           assignedFamilyMember = item.Family_Member;\r\n            taskRequired = item.Required;\r\n            taskMaxTime= item.Max_Time;\r\n            taskTime = item.Time;\r\n\r\n\r\n\r\n    return(\r\n    <button onClick={() => clickedButton(taskName) }>{taskName}</button>\r\n    )\r\n\r\n\r\n})\r\n\r\n}\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n    \r\n                <body>\r\n                <div className=\"timer\">\r\n                    <div className=\"timer__controls\">\r\n                    {/* <button onClick={()=> addTime(20)} className=\"timer__button\">20 Secs</button>\r\n                    <button onClick={()=> addTime(300)} className=\"timer__button\">Work 5</button>\r\n                    <button  onClick={()=> addTime(900)} className=\"timer__button\">Quick 15</button>\r\n                    <button  onClick={()=> addTime(1200)} className=\"timer__button\">Snack 20</button>\r\n                    <button  onClick={()=> addTime(3600)} className=\"timer__button\">Lunch Break</button> */}\r\n                    {createButtons}\r\n                    <form name=\"customForm\" id=\"custom\">\r\n                        <input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\"/>\r\n                    </form>\r\n                    </div>\r\n                    <div class=\"display\">\r\n                    <h1 class=\"display__time-left\"></h1>\r\n                    <p class=\"display__end-time\"></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <script src=\"FINISHED\"></script>\r\n                </body>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}